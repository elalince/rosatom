/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/functions.js */ \"./src/js/modules/functions.js\");\n\r\n\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.showNav();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.navEffect();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.starMouseFollow();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.springScrollEffect();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.setMainSliderLeftPadding();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.mainSlider();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.compareDataAttributes();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.compareDataLinks();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.toTopButton();\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.scrollReveal();\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://name/./src/js/app.js?\n}");

/***/ }),

/***/ "./src/js/modules/functions.js":
/*!*************************************!*\
  !*** ./src/js/modules/functions.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compareDataAttributes: () => (/* binding */ compareDataAttributes),\n/* harmony export */   compareDataLinks: () => (/* binding */ compareDataLinks),\n/* harmony export */   mainSlider: () => (/* binding */ mainSlider),\n/* harmony export */   navEffect: () => (/* binding */ navEffect),\n/* harmony export */   scrollReveal: () => (/* binding */ scrollReveal),\n/* harmony export */   setMainSliderLeftPadding: () => (/* binding */ setMainSliderLeftPadding),\n/* harmony export */   showNav: () => (/* binding */ showNav),\n/* harmony export */   springScrollEffect: () => (/* binding */ springScrollEffect),\n/* harmony export */   starMouseFollow: () => (/* binding */ starMouseFollow),\n/* harmony export */   toTopButton: () => (/* binding */ toTopButton)\n/* harmony export */ });\nfunction showNav() {\n\n    const navLink = document.querySelector( '.show-nav');\n    const nav = document.querySelector( '.top-block__nav');\n    const spring = document.querySelector( '.top-block__spring');\n    const content = document.querySelector( '.top-block__content');\n    const closeLink = document.querySelector( '.nav__close')\n    $(navLink).on('click', function() {\n        $(navLink).toggleClass('active');\n        $(nav).toggleClass('active');\n        $(spring).toggleClass('hidden');\n        $(content).toggleClass('hidden')\n    });\n    $(closeLink).on('click', function() {\n        $(navLink).removeClass('active');\n        $(nav).removeClass('active');\n        $(spring).removeClass('hidden');\n        $(content).removeClass('hidden')\n    });\n\n}\n\n\nfunction mainSlider() {\n    const slider = new Swiper('.slider', {\n        direction: 'horizontal',\n        slidesPerView: 'auto',\n        spaceBetween: 20,\n        loop: true,\n        speed: 600,\n        allowTouchMove: true,\n        navigation: {\n            nextEl: '.slider__button--next',\n            prevEl: '.slider__button--prev',\n        },\n        pagination: {\n            el: '.slider__pagination',\n            clickable: true,\n            renderBullet: function (index, className) {\n                return `<span class=\"${className}\">${(index + 1).toString().padStart(2, '0')}</span>`;\n            }\n        },\n    });\n\n    const fullBtn = document.querySelector('.full-slider-btn');\n    const prevBtn = document.querySelector('.slider__button--prev');\n    const fullSlider = document.querySelector('.main-slider');\n    const leftBlock = document.querySelector('.main-slider__left');\n    const rightBlock = document.querySelector('.main-slider__right');\n\n    if (fullBtn && leftBlock && rightBlock) {\n        fullBtn.addEventListener('click', () => {\n            fullBtn.classList.add('hidden');\n            prevBtn.classList.remove('hidden');\n            leftBlock.classList.add('hidden');\n            rightBlock.classList.add('expanded');\n            fullSlider.classList.add('expanded');\n        });\n    }\n}\n\nfunction navEffect() {\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const navItems = document.querySelectorAll('.nav__item');\n  const imagesItems = document.querySelectorAll('.nav__images-item');\n\n  navItems.forEach(item => {\n    item.addEventListener('mouseenter', () => {\n      const itemNum = item.getAttribute('data-item');\n      imagesItems.forEach(img => {\n        if (img.getAttribute('data-image') === itemNum) {\n          img.classList.add('active');\n        } else {\n          img.classList.remove('active');\n        }\n      });\n    });\n    item.addEventListener('mouseleave', () => {\n      imagesItems.forEach(img => img.classList.remove('active'));\n    });\n  });\n});\n\n}\n\nfunction starMouseFollow() {\n    const decorElements = document.querySelectorAll('.decor');\n\n    if (!decorElements.length) return;\n\n    let mouseX = 0;\n    let mouseY = 0;\n\n    // Обработчик движения мыши\n    document.addEventListener('mousemove', (e) => {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n    });\n\n    // Функция анимации для одного элемента\n    function animateDecor(element) {\n        // Получаем позицию элемента\n        const rect = element.getBoundingClientRect();\n        const centerX = rect.left + rect.width / 2;\n        const centerY = rect.top + rect.height / 2;\n\n        // Вычисляем расстояние от курсора до центра элемента\n        const deltaX = mouseX - centerX;\n        const deltaY = mouseY - centerY;\n\n        // Ограничиваем движение для деликатности\n        const maxOffset = 8;\n        const sensitivity = 0.02;\n\n        // Вычисляем смещение с учетом чувствительности (инвертируем движение)\n        const elementX = -deltaX * sensitivity;\n        const elementY = -deltaY * sensitivity;\n\n        // Ограничиваем максимальное смещение\n        const limitedX = Math.max(-maxOffset, Math.min(maxOffset, elementX));\n        const limitedY = Math.max(-maxOffset, Math.min(maxOffset, elementY));\n\n        // Применяем трансформацию с плавной анимацией\n        element.style.transform = `translate(${limitedX}px, ${limitedY}px) rotate(${limitedX * 0.5}deg)`;\n    }\n\n    // Функция анимации для всех элементов\n    function animateAllDecor() {\n        decorElements.forEach(element => {\n            animateDecor(element);\n        });\n        requestAnimationFrame(animateAllDecor);\n    }\n\n    // Добавляем плавный переход для каждого элемента\n    decorElements.forEach(element => {\n        element.style.transition = 'transform 0.2s ease-out';\n    });\n\n    // Запускаем анимацию\n    animateAllDecor();\n\n    // Добавляем плавность при возврате в исходное положение\n    document.addEventListener('mouseleave', () => {\n        decorElements.forEach(element => {\n            element.style.transition = 'transform 0.8s ease-out';\n            element.style.transform = 'translate(0px, 0px) rotate(0deg)';\n        });\n\n        // Убираем transition после анимации\n        setTimeout(() => {\n            decorElements.forEach(element => {\n                element.style.transition = '';\n            });\n        }, 800);\n    });\n}\n\nfunction springScrollEffect() {\n    const springItem = document.querySelector('.spring');\n    \n    if (!springItem) return;\n\n    let lastScrollY = window.scrollY;\n    let isCompressed = false;\n    let originalHeight = springItem.offsetHeight;\n\n    // Функция сжатия пружины\n    function compressSpring() {\n        if (isCompressed) return;\n\n        isCompressed = true;\n\n        // Быстрое сжатие на 20%\n        springItem.style.transition = 'height 0.15s ease-out';\n        springItem.style.height = (originalHeight * 0.8) + 'px';\n\n        // Мгновенный отскок обратно с небольшой задержкой\n        setTimeout(() => {\n            springItem.style.transition = 'height 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55)';\n            springItem.style.height = (originalHeight * 1.05) + 'px';\n\n            // Возврат к нормальной высоте\n            setTimeout(() => {\n                springItem.style.transition = 'height 0.2s ease-out';\n                springItem.style.height = originalHeight + 'px';\n            }, 300);\n        }, 150);\n\n        // Сбрасываем состояние через некоторое время\n        setTimeout(() => {\n            isCompressed = false;\n        }, 1000);\n    }\n\n    // Обработчик скролла\n    function handleScroll() {\n        const currentScrollY = window.scrollY;\n        const scrollDelta = Math.abs(currentScrollY - lastScrollY);\n\n        // Если скролл достаточно большой, запускаем эффект пружины\n        if (scrollDelta > 10 && !isCompressed) {\n            compressSpring();\n        }\n\n        lastScrollY = currentScrollY;\n    }\n\n    // Добавляем обработчик скролла с throttling\n    let ticking = false;\n    function requestTick() {\n        if (!ticking) {\n            requestAnimationFrame(() => {\n                handleScroll();\n                ticking = false;\n            });\n            ticking = true;\n        }\n    }\n\n    window.addEventListener('scroll', requestTick);\n}\n\nfunction setMainSliderLeftPadding() {\n    const content = document.querySelector('.top-block__content');\n    const sliderLeft = document.querySelector('.main-slider');\n    if (!content || !sliderLeft) return;\n\n    function updatePadding() {\n        const rect = content.getBoundingClientRect();\n        sliderLeft.style.paddingLeft = rect.left + 'px';\n    }\n\n    updatePadding();\n    window.addEventListener('resize', updatePadding);\n}\n\nfunction compareDataAttributes() {\n    const mainBlock = document.querySelector('main');\n    const topCounter = document.querySelectorAll('.top-block-inset__counter-list');\n    const sliderItems = document.querySelectorAll('.slider__item');\n    const navItems = document.querySelectorAll('.nav__item');\n\n    if (!mainBlock || !sliderItems.length) return;\n    \n    const mainDataValue = mainBlock.getAttribute('data-order');\n    if (!mainDataValue) return;\n\n    sliderItems.forEach(item => {\n        const slideDataValue = item.getAttribute('data-slide');\n        if (slideDataValue === mainDataValue) {\n            item.classList.add('disabled');\n        } else {\n            item.classList.remove('disabled');\n        }\n    });\n\n    topCounter.forEach(counter => {\n        counter.classList.add('top-block-inset__counter-list--' + mainDataValue);\n\n        const links = counter.querySelectorAll('a');\n        links.forEach((link, idx) => {\n            if ((idx + 1).toString() === mainDataValue) {\n                link.classList.add('current');\n            } else {\n                link.classList.remove('current');\n            }\n        });\n    });\n}\n\nfunction compareDataLinks() {\n    // Получаем все nav__item и все counter-item\n    const navItems = document.querySelectorAll('.nav__item');\n    const counterLinks = document.querySelectorAll('.top-block-inset__counter-item');\n\n    navItems.forEach(navItem => {\n        const itemNum = navItem.getAttribute('data-link'); // используем data-link!\n        const href = navItem.getAttribute('href');\n        // Находим все ссылки с нужным data-count\n        const matchingCounterLinks = document.querySelectorAll(`.top-block-inset__counter-item[data-count=\"${itemNum}\"]`);\n        matchingCounterLinks.forEach(counterLink => {\n            counterLink.setAttribute('href', href || '');\n        });\n    });\n}\n\nfunction toTopButton() {\n    const toTopBtn = document.querySelector('.to-top');\n    \n    if (!toTopBtn) return;\n    \n    // Вычисляем 1vh в пикселях\n    const oneVh = window.innerHeight * 0.01;\n    \n    // Функция проверки видимости кнопки\n    function toggleButtonVisibility() {\n        if (window.scrollY > oneVh) {\n            toTopBtn.classList.add('active');\n        } else {\n            toTopBtn.classList.remove('active');\n        }\n    }\n    \n    // Обработчик скролла\n    window.addEventListener('scroll', toggleButtonVisibility);\n    \n    // Обработчик клика по кнопке\n    toTopBtn.addEventListener('click', () => {\n        // Плавный скролл вверх\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    });\n    \n    // Проверяем начальное состояние\n    toggleButtonVisibility();\n}\n\nfunction scrollReveal() {\n    const elements = document.querySelectorAll('.content__title, .content__text');\n    const quoteBlocks = document.querySelectorAll('.quote');\n    \n    if (!elements.length && !quoteBlocks.length) return;\n    \n    // Функция проверки видимости элемента\n    function isElementInViewport(element) {\n        const rect = element.getBoundingClientRect();\n        const windowHeight = window.innerHeight;\n        \n        // Элемент считается видимым, когда его верхняя граница находится в пределах экрана\n        // с небольшим отступом для более раннего срабатывания\n        return rect.top <= windowHeight * 0.8;\n    }\n    \n    // Функция анимации появления для content элементов\n    function revealElement(element) {\n        if (element.classList.contains('revealed')) return;\n        \n        element.classList.add('revealed');\n    }\n    \n    // Функция активации для quote блоков\n    function activateQuote(quote) {\n        if (quote.classList.contains('active')) return;\n        \n        quote.classList.add('active');\n    }\n    \n    // Функция проверки всех элементов\n    function checkElements() {\n        // Проверяем content элементы\n        elements.forEach(element => {\n            if (isElementInViewport(element)) {\n                revealElement(element);\n            }\n        });\n        \n        // Проверяем quote блоки\n        quoteBlocks.forEach(quote => {\n            if (isElementInViewport(quote)) {\n                activateQuote(quote);\n            }\n        });\n    }\n    \n    // Обработчик скролла с throttling для производительности\n    let ticking = false;\n    function requestTick() {\n        if (!ticking) {\n            requestAnimationFrame(() => {\n                checkElements();\n                ticking = false;\n            });\n            ticking = true;\n        }\n    }\n    \n    // Добавляем обработчик скролла\n    window.addEventListener('scroll', requestTick);\n    \n    // Проверяем элементы при загрузке страницы\n    checkElements();\n}\n\n\n\n//# sourceURL=webpack://name/./src/js/modules/functions.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;